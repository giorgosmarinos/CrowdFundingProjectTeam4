// <auto-generated />
using System;
using CrowdFundingProjectTeam4.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrowdFundingProjectTeam4.Migrations
{
    [DbContext(typeof(CrowdFundingTeam4DBContext))]
    partial class CrowdFundingTeam4DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.FundingPackage", b =>
                {
                    b.Property<int>("FundingPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Project")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Reward")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FundingPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("FundingPackages");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinFund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MoneyGoal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.StatusUpdate", b =>
                {
                    b.Property<int>("StatusUpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StatusUpdateId");

                    b.HasIndex("ProjectId");

                    b.ToTable("StatusUpdates");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.UserFundingPackage", b =>
                {
                    b.Property<int>("UserFundingPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FundingPackageId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserFundingPackageId");

                    b.HasIndex("FundingPackageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFundingPackage");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.UserProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserProjects");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.FundingPackage", b =>
                {
                    b.HasOne("CrowdFundingProjectTeam4.Model.Project", null)
                        .WithMany("ListofFundingPackages")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.Project", b =>
                {
                    b.HasOne("CrowdFundingProjectTeam4.Model.User", null)
                        .WithMany("CreatedProject")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.StatusUpdate", b =>
                {
                    b.HasOne("CrowdFundingProjectTeam4.Model.Project", null)
                        .WithMany("ListofStatusUpdates")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.UserFundingPackage", b =>
                {
                    b.HasOne("CrowdFundingProjectTeam4.Model.FundingPackage", "FundingPackage")
                        .WithMany()
                        .HasForeignKey("FundingPackageId");

                    b.HasOne("CrowdFundingProjectTeam4.Model.User", "User")
                        .WithMany("AssignedFundingPackages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("CrowdFundingProjectTeam4.Model.UserProject", b =>
                {
                    b.HasOne("CrowdFundingProjectTeam4.Model.Project", "Project")
                        .WithMany("ListofBackers")
                        .HasForeignKey("ProjectId");

                    b.HasOne("CrowdFundingProjectTeam4.Model.User", "User")
                        .WithMany("FundedProject")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
